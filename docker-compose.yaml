version: '3'
  
services:
  app:
    image: bulbawarrior/app
    build: .
    container_name: app
    ports:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-gateway.rule=Host(`$HOST`) && PathPrefix(`/app`)"
      - "traefik.http.routers.app-gateway.entrypoints=websecure"
      - "traefik.http.routers.app-gateway.tls.certresolver=letsencrypt"
      - "traefik.http.routers.app-gateway.middlewares=app-gateway-stripprefix"
      - "traefik.http.middlewares.app-gateway-stripprefix.stripprefix.prefixes=/app"
      - "traefik.http.services.app-gateway.loadbalancer.server.port=80"
    networks:
      - public
      - default
    restart: unless-stopped
    #deploy: 
    #  replicas: 3
    #  resources:
    #    reservations:
    #      cpus: '0.15'

  prometheus:
    image: bulbawarrior/prom
    build: ./prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090
    #deploy:
    #  placement:
    #    constraints:
    #      - node.role == manager
    links:
        - cadvisor:cadvisor
    depends_on:
        - cadvisor
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus-gateway.rule=Host(`$HOST`) && PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus-gateway.entrypoints=websecure"
      - "traefik.http.routers.prometheus-gateway.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prometheus-gateway.middlewares=prometheus-gateway-stripprefix"
      - "traefik.http.middlewares.prometheus-gateway-stripprefix.stripprefix.prefixes=/prometheus"
      - "traefik.http.services.prometheus-gateway.loadbalancer.server.port=80"
    networks:
      - public
      - default
    restart: unless-stopped

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    hostname: '{{.Node.ID}}'
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
    ports:
        - 8080
    deploy:
        mode: global
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor-gateway.rule=Host(`$HOST`) && PathPrefix(`/cadvisor`)"
      - "traefik.http.routers.cadvisor-gateway.entrypoints=websecure"
      - "traefik.http.routers.cadvisor-gateway.tls.certresolver=letsencrypt"
      - "traefik.http.routers.cadvisor-gateway.middlewares=cadvisor-gateway-stripprefix"
      - "traefik.http.middlewares.cadvisor-gateway-stripprefix.stripprefix.prefixes=/cadvisor"
      - "traefik.http.services.cadvisor-gateway.loadbalancer.server.port=80"
    networks:
      - public
      - default
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-gateway.rule=Host(`$HOST`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana-gateway.entrypoints=websecure"
      - "traefik.http.routers.grafana-gateway.tls.certresolver=letsencrypt"
      - "traefik.http.routers.grafana-gateway.middlewares=grafana-gateway-stripprefix"
      - "traefik.http.middlewares.grafana-gateway-stripprefix.stripprefix.prefixes=/grafana"
      - "traefik.http.services.grafana-gateway.loadbalancer.server.port=80"
    networks:
      - public
      - default
    restart: unless-stopped

  proxy:
    image: bulbawarrior/traefik
    build: ./traefik
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      # - "8081:8080"
    networks:
      - public
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

volumes:
  grafana_data:

networks:
  public:
    external: true
